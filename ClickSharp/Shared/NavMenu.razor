@inject ClickSharpContext dbContext



<nav class="flex-column">
    @*        <div class="nav-item px-3">
    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
    <span class="oi oi-home" aria-hidden="true"></span> Home
    </NavLink>
    <NavLink class="nav-link" href="Test" Match="NavLinkMatch.All">
    Test
    </NavLink>
    </div>*@
</nav>
<header class="text-bg-dark">
    <nav class="navbar navbar-expand-md navbar-dark bg-dark container">
        <a class="navbar-brand" href="/">ClickSharp</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavDropdown">
            <ul class="navbar-nav">
                <li class="nav-item active">
                    <a class="nav-link active" href="/">Home</a>
                </li>
@*                <li class="nav-item">
                    <a class="nav-link" href="javascript:;">Link</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="http://example.com" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Dropdown </a>
                    <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                        <li><a class="dropdown-item" href="#">Action</a></li>
                        <li><a class="dropdown-item" href="#">Another action</a></li>
                        <li class="dropdown-submenu">
                            <a class="dropdown-item dropdown-toggle" href="http://google.com">Google</a>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#">Submenu</a></li>
                                <li><a class="dropdown-item" href="#">Submenu0</a></li>
                                <li class="dropdown-submenu">
                                    <a class="dropdown-item dropdown-toggle" href="#">Submenu 1</a>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="#">Subsubmenu1</a></li>
                                        <li><a class="dropdown-item" href="#">Subsubmenu1</a></li>
                                    </ul>
                                </li>
                                <li class="dropdown-submenu">
                                    <a class="dropdown-item dropdown-toggle" href="#">Submenu 2</a>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="#">Subsubmenu2</a></li>
                                        <li><a class="dropdown-item" href="#">Subsubmenu2</a></li>
                                    </ul>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                </li>*@
                @foreach(var childModel in _childModels)
                {
                    <NavItem Model="childModel" />
                }
            </ul>
        </div>
    </nav>
</header>

@code {
    private List<MenuModel> _childModels = new();
    protected override void OnInitialized()
    {
        //List<Menu>? parentChilds = dbContext.Menu?.Where(x => x.DisplayName == "MAIN").FirstOrDefault().Childrens;
        List<Menu>? parentChilds = dbContext.Menu?.Where(x => x.ParentId == 2).OrderBy(x=> x.Index).ToList();


        if (parentChilds != null)
        {
            foreach(var child in parentChilds)
            {
                _childModels.Add(
                    new MenuModel
                    {
                        Id = child.Id,
                        DisplayName = child.DisplayName,
                        Index = child.Index,
                        PageId = child.PageId,
                        ParentId = child.ParentId
                    }
                );
            }
        }

        base.OnInitialized();
    }
}
